name: release

env:
  QT_VERSION: 6.2.4
  VTK_VERSION: 9.1.0
  CACHE_NUM: 0

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write
  discussions: write

jobs:
  build-macos:
    name: release (macos)
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-11
            arch: macos
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Cache environment
        id: cache-env
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/Qt
          key: ${{ runner.os }}-qt-cache-${{ env.CACHE_NUM }}

      - name: Install Qt
        if: steps.cache-env.outputs.cache-hit != 'true'
        uses: jurplel/install-qt-action@v3
        with:
          version: ${{ env.QT_VERSION }}
          target: 'desktop'
          dir: '${{ github.workspace }}'
          install-deps: 'true'

      - name: Build VTK
        if: steps.cache-env.outputs.cache-hit != 'true'
        run: |
          cd ${{ github.workspace }}
          wget -q https://www.vtk.org/files/release/9.1/VTK-${VTK_VERSION}.tar.gz
          tar -xzf VTK-${VTK_VERSION}.tar.gz
          cd VTK-${VTK_VERSION}
          echo "::group::configure"
          mkdir build && cd build
          cmake \
            -DCMAKE_PREFIX_PATH=${{ github.workspace }}/Qt/${QT_VERSION}/${{ matrix.arch }} \
            -DCMAKE_BUILD_TYPE=Release \
            -DBUILD_SHARED_LIBS=ON \
            -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}/Qt/${QT_VERSION}/${{ matrix.arch }} \
            -DVTK_GROUP_ENABLE_Qt=WANT \
            ..
          echo "::endgroup::"
          echo "::group::make"
          make -j2 install
          echo "::endgroup::"

      - name: Configure
        run: |
          cmake \
            -DCMAKE_PREFIX_PATH=${{ github.workspace }}/Qt/${QT_VERSION}/${{ matrix.arch }} \
            -DCMAKE_BUILD_TYPE=Release \
            -S . -B ${{ github.workspace }}/build

      - name: Build
        run: make -C ${{ github.workspace }}/build

      - name: Deploy app bundle
        run: |
          ${{ github.workspace }}/Qt/${QT_VERSION}/${{ matrix.arch }}/bin/macdeployqt ${{ github.workspace }}/build/src/mesh-inspector.app
          cd ${{ github.workspace }}/build/src
          mv mesh-inspector.app "Mesh Inspector.app"
          zip -r mesh-inspector-${{ github.ref_name }}-macos-x86_64.zip "Mesh Inspector.app"

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: macos-x86_64
          path: "${{ github.workspace }}/build/src/mesh-inspector-${{ github.ref_name }}-macos-x86_64.zip"

  create-release:
    needs: [build-macos]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v2

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: true
          discussion_category_name: announcements
          files: |
            macos-x86_64/mesh-inspector-${{ github.ref_name }}-macos-x86_64.zip
